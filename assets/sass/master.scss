// Variables

$audioPlayerWidth: 100vw;
$audioProgLineHeight: 5px;
$audioProgLineWidth: 200px;
$playlistBgColor: grey;


// Mixins

@mixin position($type,$top,$right,$bottom,$left){
	position: $type;

	@if $top != "" { top: $top; }

	@if $right != "" { right: $right; }

	@if $bottom != "" { bottom: $bottom; }

	@if $left != "" { left: $left; }
}

@mixin playlistBorderGrad($edge){
	$thickness: 10px;
	$fadeFrom: black;
	$fadeTo: grey;

	@if $edge == "left" {
		@include position(absolute,0,"","",0);
		width: $thickness;
		height: 100%;
		background:  linear-gradient(to right, $fadeFrom 0%, $fadeTo 100%);
		z-index:  41;
	}

	@if $edge == "topLeft" {
		@include position(absolute,0,"","",0);
		width:  $thickness;
		height:  $thickness;
		background:  linear-gradient(135deg, $fadeFrom 50%, $fadeTo 100%);
		z-index:  42;
	}

	@if $edge == "top" {
		@include position(absolute,0,"","",0);
		width:  100%;
		height:  $thickness;
		background:  linear-gradient(to bottom, $fadeFrom 0%, $fadeTo 100%);
		z-index:  41;
	}

	@if $edge == "topRight" {
		@include position(absolute,0,0,"","");
		width:  $thickness;
		height:  $thickness;
		background:  linear-gradient(225deg, $fadeFrom 50%, $fadeTo 100%);
		z-index:  42;
	}

	@if $edge == "right" {
		@include position(absolute,0,0,"","");
		width:  $thickness;
		height:  100%;
		background:  linear-gradient(to left, $fadeFrom 0%, $fadeTo 100%);
		z-index:  41;
	}
}

// CSS

* { overflow:  hidden; }

body { background-color:  black; }

#audioPlayer {
	margin:  0 auto;
	width:  $audioPlayerWidth;
}

#audioPos {
	@include position(relative,0,"","",0);
	margin:  11vh auto;
	width:  fit-content;
}

#audioKnobs {}

#audioVolDiv {
	@include position(relative,"","","","");
	z-index:  20;
}
#audioVol {
	/* Values marked as !important to override jQuery knob inline styles */
	font-size:  3em !important;
	color:  rgb(0,0,255) !important;
}

#audioProgDiv, #audioProgStyleDiv { display:  none; }
#audioProg {}

#audioProgLinePos {
	@include position(absolute,200px,"","",200px);
	height:  $audioProgLineHeight * 3;
}
#audioProgLineDiv {
	@include position(relative,4.4px,"","",0);
	height:  $audioProgLineHeight;
	width:  $audioProgLineWidth;
	background-color:  grey;
	border-radius:  5px;
	z-index:  30;
}
#audioProgLine {
	@include position(relative,0,"","",0);
	background-color:  blue;
	width:  0px;
	max-width:  $audioProgLineWidth;
	height:  $audioProgLineHeight;
	z-index:  31;
}
#audioProgDot {
	@include position(absolute,0,"","",0);
	width:  15px;
	height:  15px;
	background-color:  white;
	border-radius:  100px;
	z-index:  32;
}

#loadingDiv {
	@include position(absolute,200px,"","",200px);
	display:  none;
}
#loadingAnim {}

#audioVisualizer {
	@include position(absolute,374px,"","",141px);
	display:  block;
	z-index:  10;
	width:  319px;
	height:  181px;

	div {
		@include position(absolute,"","",0,"");
		background-color:  red;
		transition:  0.1s all linear;
	}
}

#controls {
	@include position(absolute,150px,"","",190px);
	font-size:  2em;
	z-index:  30;

	div {
		display:  inline-block;
		padding:  5px;
		cursor:  pointer;
		color:  #646464;
	}
}

#repeatButton img { width:  30px; }

#backButton {}

#playButton {}

#pauseButton {}

#skipButton {}

#playlistControl {
	@include position(relative,"","",110px,"");
	padding:  12px 10px 10px 10px;
	margin:  0 auto;
	width:  750px;
	height:  310px;
	background-color:  $playlistBgColor;
	border-radius:  10px;
	z-index:  40;
}
#playlistGradientL { @include playlistBorderGrad("left"); }
#playlistGradientTL { @include playlistBorderGrad("topLeft"); }
#playlistGradientT { @include playlistBorderGrad("top"); }
#playlistGradientTR { @include playlistBorderGrad("topRight"); }
#playlistGradientR { @include playlistBorderGrad("right"); }
#audioInputDiv {
	width:  fit-content;
	margin:  0 auto;
}
#audioInput {
	display:  inline-block;
	height:  20px;
	width:  700px;
	font-size:  0.75em;
}
#audioInputIcoPos {
	@include position(relative,5px,"","","");
	display:  inline-block;
}
#audioInputBtn {
	width:  20px;
	height:  20px;
	cursor:  pointer;

	i { @include position(relative,2px,"","",3px); }
}

#playlistView {
	// 	height:  46vh;
	// 	width:  100%;
	// 	margin-top:  5px;
	// 	overflow-y:  auto;
	// 	overflow-x: hidden;
	// 	word-wrap: break-word;
}

#playlistCurrentPos {
	// @include position(relative,0,"","",0);
	// 	height: 0;
	// 	width: 0;
	// 	text-align: center;
}
#playlistCurrent {
	// @include position(relative,0,"","",-5px);
	// 	height: 20px;
	// 	width: 20px;
}

.playlistItem {
	// 	border-left: 3px solid white;
	// 	padding-left: 5px;

	p {
		// 	margin: 5px 0;
	}
}

.playlistBtnPos {
	// @include position(relative,-5px,"","",750px);
	// 	height: 0;
	// 	width: 0;
	// 	text-align: center;
}
.playlistBtn {
	// @include position(absolute,0,"","",0);
	// 	height: 20px;
	// 	width: 20px;
	// 	cursor: pointer;
}

/* Javascript classes */
.activeControl {
	// 	background-color: grey;
	color: #c8c8c8 !important;
}

.disabled {
	// 	color: grey;
}

// @media screen and (min-width: 225px){
// 	#audioPlayer {}
// }
//
// @media screen and (min-width: 1050px){
// 	#audioPlayer {}
// }
//
// @media screen and (min-width: 1300px){
// 	#audioPlayer {}
// }
//
// @media screen and (min-width: 1500px){
// 	#audioPlayer {}
// }
//
// @media screen and (min-width: 1800px){
// 	#audioPlayer {}
// }
//
// @media screen and (min-width: 2300px){
// 	#audioPlayer {}
// }
//
// @media screen and (min-width: 5000px){
// 	#audioPlayer {}
// }
